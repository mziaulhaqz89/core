name: 01-Export Main Solution From Dev

on:
  workflow_dispatch:
    inputs:
      solution_names:
        description: 'Solution name (main)'
        required: true
        default: 'main'
      custom_branch_name:
        description: 'Custom branch name (leave empty for auto-generated)'
        required: false
        default: ''
      target_branch:
        description: 'Target branch to create PR against'
        required: true
        default: 'main'
      include_managed:
        description: 'Include managed solution export'
        type: boolean
        required: false
        default: false

permissions:
  contents: write
  pull-requests: write

jobs:
  export-solution:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - name: Install Power Platform CLI
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Authenticate to DEV environment
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{ vars.DEV_ENVIRONMENT_URL }}
        app-id: ${{ vars.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ vars.TENANT_ID }}

    - name: Generate branch name
      id: branch
      shell: pwsh
      run: |
        if ("${{ github.event.inputs.custom_branch_name }}" -ne "") {
          $branchName = "${{ github.event.inputs.custom_branch_name }}"
          Write-Host "Using custom branch name: $branchName"
        } else {
          $timestamp = Get-Date -Format "yyyyMMdd-HHmmss"
          $branchName = "solution-export-$timestamp"
          Write-Host "Generated branch name: $branchName"
        }
        echo "name=$branchName" >> $env:GITHUB_OUTPUT

    - name: Create and checkout feature branch
      shell: pwsh
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b "${{ steps.branch.outputs.name }}"

    - name: Export main solution (unmanaged)
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{ vars.DEV_ENVIRONMENT_URL }}
        app-id: ${{ vars.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ vars.TENANT_ID }}
        solution-name: main
        solution-output-file: temp_main_unmanaged.zip
        managed: false

    - name: Unpack main solution (unmanaged)
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: temp_main_unmanaged.zip
        solution-folder: mainsolution/unmanaged
        solution-type: Unmanaged
        overwrite-files: true

    - name: Export main solution (managed)
      if: github.event.inputs.include_managed == 'true'
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{ vars.DEV_ENVIRONMENT_URL }}
        app-id: ${{ vars.CLIENT_ID }}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{ vars.TENANT_ID }}
        solution-name: main
        solution-output-file: temp_main_managed.zip
        managed: true

    - name: Unpack main solution (managed)
      if: github.event.inputs.include_managed == 'true'
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: temp_main_managed.zip
        solution-folder: mainsolution/managed
        solution-type: Managed
        overwrite-files: true

    - name: Clean up temp files
      shell: pwsh
      run: |
        Remove-Item "temp_main_unmanaged.zip" -ErrorAction SilentlyContinue
        Remove-Item "temp_main_managed.zip" -ErrorAction SilentlyContinue

    - name: Commit and push changes
      shell: pwsh
      run: |
        git add mainsolution/
        $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
        git commit -m "Export main solution - $timestamp"
        git push origin "${{ steps.branch.outputs.name }}"

    - name: Create Pull Request
      shell: pwsh
      run: |
        $prTitle = "Export main solution - $(Get-Date -Format 'yyyy-MM-dd HH:mm')"
        $prBody = @"
        ## üì¶ Solution Export Summary
        
        **Solution**: main
        **Export Date**: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
        **Source Environment**: ${{ vars.DEV_ENVIRONMENT_URL }}
        **Export Type**: $( if ("${{ github.event.inputs.include_managed }}" -eq "true") { "Unmanaged + Managed" } else { "Unmanaged only" } )
        
        ### üìã Changes Included
        - Main solution components export
        - HousingUnit, Lease, and Tenant tables
        - Forms, views, and relationships
        
        ### üîç Next Steps
        1. Review the exported solution files
        2. Verify all components are included
        3. Merge when ready to trigger deployment
        
        ### üöÄ Deployment Flow
        After merging this PR to `main`:
        - Automatic deployment to TEST environment
        - Manual approval required for UAT
        - Manual approval required for PRODUCTION
        "@
        
        gh pr create --title "$prTitle" --body "$prBody" --base "${{ github.event.inputs.target_branch }}" --head "${{ steps.branch.outputs.name }}"
      env:
        GH_TOKEN: ${{ github.token }}
